import { assert } from "chai";
import { decodeMorse } from "../../6kyu/decode-morse";
import { decodeBits } from "../decode-bits-morse";

const Test = {
	assertEquals: (...args: any[]) => (assert as any).equal(...args),
};

describe("Example from description", () => {
	it("Example from description", () => {
		const bits =
			"1100110011001100000011000000111111001100111111001111110000000000000011001111110011111100111111000000110011001111110000001111110011001100000011";
		Test.assertEquals(decodeMorse(decodeBits(bits)), "HEY JUDE");
	});
});

describe("Basic bits decoding", function () {
	Test.assertEquals(decodeMorse(decodeBits("1")), "E");
	Test.assertEquals(decodeMorse(decodeBits("101")), "I");
	Test.assertEquals(decodeMorse(decodeBits("10001")), "EE");
	Test.assertEquals(decodeMorse(decodeBits("10111")), "A");
	Test.assertEquals(decodeMorse(decodeBits("1110111")), "M");
});

describe("Multiple bits per dot handling", function () {
	Test.assertEquals(decodeMorse(decodeBits("111")), "E");
	Test.assertEquals(decodeMorse(decodeBits("1111111")), "E");
	Test.assertEquals(decodeMorse(decodeBits("110011")), "I");
	Test.assertEquals(decodeMorse(decodeBits("111000111")), "I");
	//-- Should pass! Please fix the solution!
	Test.assertEquals(decodeMorse(decodeBits("111110000011111")), "I");
	Test.assertEquals(decodeMorse(decodeBits("11111100111111")), "M");
	Test.assertEquals(decodeMorse(decodeBits("111000000000111")), "EE");
	// Should pass! Please fix the solution!
	Test.assertEquals(decodeMorse(decodeBits("111000111000111")), "S");
	// Should pass! Please fix the solution!
	Test.assertEquals(
		decodeMorse(
			decodeBits(
				"111111000000111111000000111111000000111111000000000000000000111111000000000000000000111111111111111111000000111111000000111111111111111111000000111111111111111111000000000000000000000000000000000000000000111111000000111111111111111111000000111111111111111111000000111111111111111111000000000000000000111111000000111111000000111111111111111111000000000000000000111111111111111111000000111111000000111111000000000000000000111111"
			)
		),
		"HEY JUDE"
	);
	// -- Should pass! Please fix the solution!
});

describe("Extra zeros handling", function () {
	Test.assertEquals(decodeMorse(decodeBits("01110")), "E");
	Test.assertEquals(decodeMorse(decodeBits("000000011100000")), "E");
});

describe("Long messages handling", function () {
	Test.assertEquals(
		decodeMorse(
			decodeBits(
				"00011100010101010001000000011101110101110001010111000101000111010111010001110101110000000111010101000101110100011101110111000101110111000111010000000101011101000111011101110001110101011100000001011101110111000101011100011101110001011101110100010101000000011101110111000101010111000100010111010000000111000101010100010000000101110101000101110001110111010100011101011101110000000111010100011101110111000111011101000101110101110101110"
			)
		),
		"THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG"
	);
	Test.assertEquals(
		decodeMorse(
			decodeBits(
				
			)
		),
		"THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG"
	);
});
